[
  {
    "name": "git/commit",
    "description": "Generates a commit message based on staged changes, allows editing, asks for confirmation, and then commits.",
    "prompt": "1. Get the staged changes by running 'git diff --staged'.\n2. Based on the diff, generate a commit message following conventional commit standards.\n3. Present the generated message to me.\n4. Ask if I'd like to use this message, edit it, or cancel.\n5. If I want to edit it, ask me for the new message and use that one for the next step.\n6. If I approve the message (either the original or the edited one), execute the git commit using it.\n7. If I cancel, stop the process.\n",
    "command": ""
  },
  {
    "name": "git/suggest-reviewers",
    "description": "Suggests reviewers for a pull request based on file change history.",
    "prompt": "1. Identify the files changed on the current branch compared to the master development branch.\n2. For each changed file, use 'git blame' to analyze the authorship of the code.\n3. Aggregate the line counts for each author, excluding the current user.\n4. Rank the authors based on their total line count in the changed files.\n5. Present a ranked list of suggested reviewers. For each suggestion, provide their name and a brief, data-driven reason (e.g., \"Authored X lines in file Y.js\").\n",
    "command": ""
  },
  {
    "name": "opinion",
    "description": "Requests a general opinion on the project's design and implementation.",
    "prompt": "What is your opinion on this project's design, implementation, and naming? Are there any bugs? {{args}}\n",
    "command": ""
  },
  {
    "name": "react/detect-memory-leaks",
    "description": "Flags patterns that may cause memory leaks.",
    "prompt": "Analyze useEffect, subscriptions, and event listeners for potential memory leaks. Suggest cleanup strategies. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/detect-unused-components",
    "description": "Identifies unused ReactJS components in the codebase.",
    "prompt": "Analyze the project and list ReactJS components that are defined but never used. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/generate-loading-component",
    "description": "Creates placeholder for async components.",
    "prompt": "Generate placeholder component for {{args}} to show during loading. Include placeholder shapes and fade-in transitions.\n",
    "command": ""
  },
  {
    "name": "react/generate-project-overview",
    "description": "Summarizes the projectâ€™s architecture and key modules.",
    "prompt": "Generate a high-level overview of the project. Include architecture, key folders, routing structure, and state management. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/generate-unit-tests",
    "description": "Generates unit tests for a React component using react-testing-library.",
    "prompt": "Generate unit tests for the provided React component using react-testing-library. Use the format: it('should...') with relevant actions being tested. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/identify-large-components",
    "description": "Flags components with high line count or complexity.",
    "prompt": "Identify components with high line count, deep nesting, or complex logic. Suggest candidates for refactoring. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/map-onboarding-path",
    "description": "Suggests a learning path for new developers.",
    "prompt": "Create an onboarding path for new developers. Recommend files to read, features to explore, and first tasks. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/setup-path-aliases",
    "description": "Adds path aliases for cleaner imports.",
    "prompt": "Configure path aliases in tsconfig.json or jsconfig.json. Update example imports to use aliases. {{args}}\n",
    "command": ""
  },
  {
    "name": "react/setup-testing",
    "description": "Sets up Vitest and React Testing Library in the project.",
    "prompt": "Set up Vitest and React Testing Library in the project. If a test script is not already present in package.json, add one.\n",
    "command": ""
  },
  {
    "name": "setup-tailwind",
    "description": "Installs and configures Tailwind CSS.",
    "prompt": "Install Tailwind CSS and configure it for the project. Include example usage in App component.\n",
    "command": ""
  }
]